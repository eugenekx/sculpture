/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: engine9 (https://sketchfab.com/engine9)
License: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
Source: https://sketchfab.com/3d-models/rhetorician-a89f035291d843069d73988cc0e25399
Title: Rhetorician
*/

import React, { useEffect, useLayoutEffect, useRef } from "react";
import { useGLTF, useAnimations, useScroll, MeshReflectorMaterial } from "@react-three/drei";
import gsap from "gsap";
import { useFrame } from "@react-three/fiber";

export const FLOOR_HEIGHT = 2.3
export const NB_FLOOR = 2

export function Sculpture(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/rhetorician.glb");
  const { actions, names } = useAnimations(animations, group);
  const tl = useRef()
  const scroll = useScroll()

  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration())
  })

  useLayoutEffect(() => {
    tl.current = gsap.timeline()

    tl.current.to(
        group.current.position,
        {
            duration: 2,
            z: FLOOR_HEIGHT * (3 - 1)
        },
        0
    )

    tl.current.to(
        group.current.position,
        {
            duration: 2,
            x: -FLOOR_HEIGHT * (3 - 1) 
        },
        0
    )
    
    tl.current.to(
    group.current.rotation,
        {
            duration: 2,
            y: FLOOR_HEIGHT * (3 - 1) / 2
        },
        0
    )

  }, [])

  useEffect(() => {
    actions[names[0]].reset().play();
    return () => {
      actions[names[0]].reset();
    };
  }, [])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="Root">
            <group
              name="mentor_roman_retopo"
              position={[-0.26647, 0.12019, 1.32605]}
            >
              <mesh
                name="mentor_roman_retopo_0"
                castShadow
                receiveShadow
                geometry={nodes.mentor_roman_retopo_0.geometry}
                >
                    <meshStandardMaterial color={'#000000'} roughness={0} metalness={1}/>
                </mesh>
            </group>
            <group
              name="Empty"
              position={[0.16063, -0.17025, 4.80785]}
              rotation={[-0.10422394, 0.09859841, 0.00185804]}
              scale={[0.89240556, 0.89240717, 0.89240355]}
            >
              <group name="nimbus002">
                <mesh
                  name="nimbus002_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.nimbus002_0.geometry}
                  material={materials.Crown}
                />
              </group>
              <group name="nimbus001">
                <mesh
                  name="nimbus001_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.nimbus001_0.geometry}
                  material={materials.Crown}
                />
              </group>
              <group name="nimbus003">
                <mesh
                  name="nimbus003_0"
                  castShadow
                  receiveShadow
                  geometry={nodes.nimbus003_0.geometry}
                  material={materials.Crown}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/rhetorician.glb");
